#!/bin/bash

# Obtenir le nom de la branche actuelle
branch_name=$(git rev-parse --abbrev-ref HEAD)
echo "Nom de la branche : $branch_name"

# Pattern des branches à vérifier
pattern="^(dev|main|feature/parsing|feature/execution-setup|feature/built.*)$"

if [[ ! "$branch_name" =~ $pattern ]]; then
	echo -e "\033[34mLa branche $branch_name ne correspond pas au pattern. Push autorisé.\033[0m"
    exit 0
fi

echo -e "\033[34mLa branche correspond au pattern. Vérification de la norme...\033[0m"

# Vérification de la norme avec Norminette
DIRECTORY="./src ./libft"
OUTPUT=$(norminette $DIRECTORY)
echo "Résultat Norminette :"
echo "$OUTPUT"

if echo "$OUTPUT" | grep -q "Error"; then
	echo -e "\033[31mErreur : Le code ne respecte pas la norme.\033[0m" # Rouge pour les erreurs
    exit 1
fi

echo -e "\033[32mNorme respectée.\033[0m"

# Test Valgrind uniquement sur certaines branches spécifiques
valgrind_branches="^(dev|main|feature/parsing|feature/execution-setup|feature/built.*)$"
if [[ "$branch_name" =~ $valgrind_branches ]]; then
    echo "Exécution des tests Valgrind..."
    make re
    if [ $? -ne 0 ]; then
		echo -e "\033[31mErreur : Échec de la compilation.\033[0m" # Rouge pour les erreurs
        make fclean
        exit 1
    fi

    valgrind --leak-check=full ./minishell
    if [ $? -ne 0 ]; then
        echo -e "\033[31mErreur : Tests Valgrind échoués.\033[0m" # Rouge pour les erreurs
        make fclean
        exit 1
    fi

    make fclean
	echo -e "\033[32mTests Valgrind réussis.\033[0m" # Vert pour les succès
fi

echo "Push autorisé."
exit 0
