#!/bin/bash

# Rendre le hook exécutable (au cas où)
if [ ! -x ".githooks/pre-push" ]; then
    chmod +x .githooks/pre-push
fi

# Obtenir le nom de la branche actuelle
branch_name=$(git rev-parse --abbrev-ref HEAD)

# Pattern des branches à vérifier
pattern="^(feature|bugfix|hotfix|chore)/[a-z0-9_-]+$"

# On quitte si la branche ne match pas le pattern
if [[ ! "$branch_name" =~ $pattern ]]; then
    exit 0
fi

# Dossier à vérifier
DIRECTORY="."  # Remplace par le chemin de ton code

# Chemin de l'environnement virtuel
VENV_PATH="$HOME/.venv_norminette"

# Vérifier si Python est installé
if ! command -v python3 &> /dev/null; then
    echo "Erreur : Python 3 n'est pas installé."
    exit 1
fi

# Vérifier si l'environnement virtuel existe, sinon le créer
if [ ! -d "$VENV_PATH" ]; then
    echo "Création de l'environnement virtuel pour Norminette..."
    python3 -m venv $VENV_PATH
    if [ $? -ne 0 ]; then
        echo "Erreur : Impossible de créer l'environnement virtuel."
        exit 1
    fi
fi

# Activer l'environnement virtuel
source $VENV_PATH/bin/activate

# Vérifier si Norminette est installée, sinon l'installer
if ! command -v norminette &> /dev/null; then
    echo "Norminette n'est pas installée. Installation en cours..."
    pip install --upgrade pip setuptools
    pip install norminette
    if [ $? -ne 0 ]; then
        echo "Erreur : Impossible d'installer Norminette dans l'environnement virtuel."
        deactivate
        exit 1
    fi
fi

# Vérification de la norme avec Norminette
echo "Vérification de la norme avec Norminette..."
OUTPUT=$(norminette $DIRECTORY)

# Vérifier si la norme est respectée après correction
if echo "$OUTPUT" | grep -q "Error"; then
    echo "Erreur : Le code ne respecte pas la norme."
    echo "$OUTPUT"
    exit 1
fi

echo "Norme respectée."

# Test Valgrind uniquement sur certaines branches spécifiques
valgrind_branches="^(dev|main|feature/parsing|feature/execution-setup|feature/built.*)$"
if [[ "$branch_name" =~ $valgrind_branches ]]; then
    echo "Exécution des tests Valgrind..."

    # Recompilation propre
    make re
    if [ $? -ne 0 ]; then
        echo "Erreur : Échec de la compilation."
        make fclean
        [ -f ./minishell ] && rm -f ./minishell
        exit 1
    fi

    # Exécution des tests avec Valgrind
    valgrind --leak-check=full ./minishell
    if [ $? -ne 0 ]; then
        echo "Erreur : Tests Valgrind échoués."
        make fclean
        [ -f ./minishell ] && rm -f ./minishell
        exit 1
    fi

    # Nettoyage des fichiers générés
    make fclean
    [ -f ./minishell ] && rm -f ./minishell
    echo "Tests Valgrind réussis."
fi

echo "Push autorisé."
exit 0
